
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation=" http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                            http://www.springframework.org/schema/context 
                            http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/mvc 
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://www.springframework.org/schema/tx 
                            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                            http://www.springframework.org/schema/data/jpa
                            http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    
    <context:property-placeholder location="classpath:database.properties"/>

    <!-- Add support for conversion, formatting and validation support -->
    <mvc:annotation-driven />
    
<!--    <mvc:annotation-driven>
        <mvc:message-converters>
             Use the HibernateAware mapper instead of the default 
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.bap.api.configurate.HibernateAwareObjectMapper" />
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>-->
    
    
    <jpa:repositories base-package="com.bap.api.repo" 
                      entity-manager-factory-ref="myEmf" />
     
     
    <!-- Add support for component scanning -->
    <!--<context:component-scan base-package="com.bap.api" />-->
    <context:component-scan base-package="com.bap.api"/>  	
    
   
     
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.pass}" />
    </bean>

    <bean id="myEmf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.bap.api.model" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <!--*** HABILITAR / DESHABILITAR PARA RECREAR LA BD **-->
                <!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!--<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>-->
            </props>
        </property>
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <bean id="transactionManager" 
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="myEmf" />
    </bean>      
    
    <!--    <mvc:cors>
        <mvc:mapping path="/**" />
    </mvc:cors>-->
    
    <!--    <mvc:cors>
 
        <mvc:mapping path="/api/**"
                     allowed-origins="http://localhost:8080"      
                     allowed-methods="DELETE, GET, OPTIONS, PATCH, POST, PUT"
                     allowed-headers="x-requested-with, authorization, Content-Type, Authorization, credential, X-XSRF-TOKEN"
                     allow-credentials="false"
                     max-age="360" />
    </mvc:cors>       -->
    <!--allowed-origins="http://localhost:8080/api"-->      
    <mvc:cors>
        <mvc:mapping path="/**"
                     allowed-origins="*"    
                     allowed-headers="x-requested-with, authorization, Content-Type, Authorization, credential, X-XSRF-TOKEN"
                     allowed-methods="DELETE, GET, OPTIONS, PATCH, POST, PUT"
                     max-age="3600"/>
    </mvc:cors>

</beans>

